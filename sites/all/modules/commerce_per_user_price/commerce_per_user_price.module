<?php

/**
 * @file
 * commerce_per_user_price module file that implement drupal hooks to override core functionality.
 */
/**
 * Implements hook_commerce_product_calculate_sell_price_line_item_alter($line_item).
 */
function commerce_per_user_price_commerce_product_calculate_sell_price_line_item_alter($line_item) {
  global $user;
  // check user has Custom Price Override roles
  if (in_array('Custom Price Override', $user->roles)) {
    //Get the price from our custom database table
    $sql = db_query('SELECT price FROM {product_price_list} WHERE user_id=:uid AND product_id=:pid', array(':uid' => $user->uid, ':pid' => $line_item->line_item_label))->fetchField();

    $price=$sql*100;
    if (empty($line_item->order_id)) {
      $line_item->order_id = commerce_cart_order_id($user->uid);
    }
    if ($sql) {
        $line_item->commerce_unit_price['und'][0]['amount'] = $price;
        $line_item->commerce_unit_price['und'][0]['data']['components'][0]['price']['amount']= $price;
    }
  }
}
/**
 * Implements hook_commerce_cart_line_item_refresh().
 */
function commerce_per_user_price_commerce_cart_line_item_refresh($line_item, $order_wrapper) {
  global $user;
  // check user has Custom Price Override roles
  if (in_array('Custom Price Override', $user->roles)) {
    $qty = $line_item->quantity;
    //Get the price from our custom database table
    $sql = db_query('SELECT price FROM {product_price_list} WHERE user_id=:uid AND product_id=:pid', array(':uid' => $user->uid, ':pid' => $line_item->line_item_label))->fetchField();
    if ($sql) {
      $price = $sql*100;
      $line_item->commerce_unit_price[LANGUAGE_NONE][0]['data']['components'][0]['price']['amount'] = $price;
      $line_item->commerce_unit_price[LANGUAGE_NONE][0]['amount'] = $price;
      $line_item->commerce_total[LANGUAGE_NONE][0]['data']['components'][0]['price']['amount'] = $qty*$price;
      $line_item->commerce_total[LANGUAGE_NONE][0]['amount'] = $qty*$price;
      commerce_line_item_save($line_item);
      entity_get_controller('commerce_line_item')->resetCache(array($line_item->line_item_id));
    }
  }
}
